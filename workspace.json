{
  "version": 2,
  "projects": {
    "pulumi-lambda": {
      "root": "libs/pulumi-lambda",
      "sourceRoot": "libs/pulumi-lambda/src",
      "projectType": "library",
      "targets": {
        "package": {
          "executor": "@wanews/nx-typescript-project-references:package",
          "options": {
            "main": "libs/pulumi-lambda/src/index.ts",
            "tsConfig": "libs/pulumi-lambda/tsconfig.json"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": { "lintFilePatterns": ["libs/pulumi-lambda/**/*.ts"] }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/pulumi-lambda"],
          "options": {
            "jestConfig": "libs/pulumi-lambda/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "certificate-validation": {
      "root": "libs/certificate-validation",
      "sourceRoot": "libs/certificate-validation/src",
      "projectType": "library",
      "targets": {
        "package": {
          "executor": "@wanews/nx-typescript-project-references:package",
          "options": {
            "main": "libs/certificate-validation/src/index.ts",
            "tsConfig": "libs/certificate-validation/tsconfig.json"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/certificate-validation/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/certificate-validation"],
          "options": {
            "jestConfig": "libs/certificate-validation/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "apigateway-lambda-proxy": {
      "root": "libs/apigateway-lambda-proxy",
      "sourceRoot": "libs/apigateway-lambda-proxy/src",
      "projectType": "library",
      "targets": {
        "package": {
          "executor": "@wanews/nx-typescript-project-references:package",
          "options": {
            "main": "libs/apigateway-lambda-proxy/src/index.ts",
            "tsConfig": "libs/apigateway-lambda-proxy/tsconfig.json"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/apigateway-lambda-proxy/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/apigateway-lambda-proxy"],
          "options": {
            "jestConfig": "libs/apigateway-lambda-proxy/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "buildstep": {
      "root": "libs/buildstep",
      "projectType": "library",
      "sourceRoot": "libs/buildstep/src",
      "targets": {
        "package": {
          "executor": "@wanews/nx-typescript-project-references:package",
          "options": {
            "main": "libs/buildstep/src/index.ts",
            "tsConfig": "libs/buildstep/tsconfig.json"
          }
        }
      }
    },
    "throw-files-in-s3": {
      "root": "libs/throw-files-in-s3",
      "projectType": "library",
      "sourceRoot": "libs/throw-files-in-s3/src",
      "targets": {
        "package": {
          "executor": "@wanews/nx-typescript-project-references:package",
          "options": {
            "main": "libs/throw-files-in-s3/src/index.ts",
            "tsConfig": "libs/throw-files-in-s3/tsconfig.json"
          }
        }
      }
    },
    "invoke-lamda": {
      "root": "libs/invoke-lamda",
      "projectType": "library",
      "sourceRoot": "libs/invoke-lamda/src",
      "targets": {
        "package": {
          "executor": "@wanews/nx-typescript-project-references:package",
          "options": {
            "main": "libs/invoke-lamda/src/index.ts",
            "tsConfig": "libs/invoke-lamda/tsconfig.json"
          }
        }
      }
    },
    "wait-for-ecs-deploy": {
      "root": "libs/wait-for-ecs-deploy",
      "projectType": "library",
      "sourceRoot": "libs/wait-for-ecs-deploy/src",
      "targets": {
        "package": {
          "executor": "@wanews/nx-typescript-project-references:package",
          "options": {
            "main": "libs/wait-for-ecs-deploy/src/index.ts",
            "tsConfig": "libs/wait-for-ecs-deploy/tsconfig.json"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/wait-for-ecs-deploy/src/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/wait-for-ecs-deploy"],
          "options": {
            "jestConfig": "libs/wait-for-ecs-deploy/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "pulumi-pagerduty": {
      "root": "libs/pulumi-pagerduty",
      "projectType": "library",
      "sourceRoot": "libs/pulumi-pagerduty/src",
      "targets": {
        "package": {
          "executor": "@wanews/nx-typescript-project-references:package",
          "options": {
            "main": "libs/pulumi-pagerduty/src/index.ts",
            "tsConfig": "libs/pulumi-pagerduty/tsconfig.json"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": { "lintFilePatterns": ["libs/pulumi-lambda/**/*.ts"] }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/pulumi-lambda"],
          "options": {
            "jestConfig": "libs/pulumi-lambda/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "pulumi-sumologic": {
      "root": "libs/pulumi-sumologic",
      "sourceRoot": "libs/pulumi-sumologic/src",
      "projectType": "library",
      "targets": {
        "package": {
            "executor": "@wanews/nx-typescript-project-references:package",
            "options": {
              "main": "libs/pulumi-sumologic/src/index.ts",
              "tsConfig": "libs/pulumi-sumologic/tsconfig.json"
            }
          },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": { "lintFilePatterns": ["libs/pulumi-sumologic/**/*.ts"] }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/pulumi-sumologic"],
          "options": {
            "jestConfig": "libs/pulumi-sumologic/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    }
  },
  "cli": { "defaultCollection": "@nrwl/workspace" }
}
